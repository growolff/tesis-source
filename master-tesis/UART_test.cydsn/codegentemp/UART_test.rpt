Loading plugins phase: Elapsed time ==> 1s.654ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\UART_test.cyprj -d CY8C5888LTI-LP097 -s D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 5s.344ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.314ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  UART_test.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\UART_test.cyprj -dcpsoc3 UART_test.v -verilog
======================================================================

======================================================================
Compiling:  UART_test.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\UART_test.cyprj -dcpsoc3 UART_test.v -verilog
======================================================================

======================================================================
Compiling:  UART_test.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\UART_test.cyprj -dcpsoc3 -verilog UART_test.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Fri Sep 15 12:53:59 2017


======================================================================
Compiling:  UART_test.v
Program  :   vpp
Options  :    -yv2 -q10 UART_test.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Fri Sep 15 12:53:59 2017

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'UART_test.ctl'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
UART_test.v (line 827, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  UART_test.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\UART_test.cyprj -dcpsoc3 -verilog UART_test.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Fri Sep 15 12:54:00 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\codegentemp\UART_test.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\codegentemp\UART_test.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  UART_test.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\UART_test.cyprj -dcpsoc3 -verilog UART_test.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Fri Sep 15 12:54:01 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\codegentemp\UART_test.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\codegentemp\UART_test.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\UART:BUART:reset_sr\
	Net_8
	\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_1\
	\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_0\
	\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\
	\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	Net_3
	\UART:BUART:sRX:MODULE_5:g2:a0:gta_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_1\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_1\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lt_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gt_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lti_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gti_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:xeq\
	\UART:BUART:sRX:MODULE_6:g1:a0:xlt\
	\UART:BUART:sRX:MODULE_6:g1:a0:xlte\
	\UART:BUART:sRX:MODULE_6:g1:a0:xgt\
	\UART:BUART:sRX:MODULE_6:g1:a0:xgte\
	\UART:BUART:sRX:MODULE_6:lt\
	\UART:BUART:sRX:MODULE_6:eq\
	\UART:BUART:sRX:MODULE_6:gt\
	\UART:BUART:sRX:MODULE_6:gte\
	\UART:BUART:sRX:MODULE_6:lte\
	\ADC_TS:SAR:Net_221\
	\ADC_TS:SAR:Net_381\
	\ADC_TS:bSAR_SEQ:sw_soc\
	\ADC_TS:soc_out\
	\ADC_TS:Net_3905\
	\ADC_TS:Net_3867\
	\ADC_TS:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_TS:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_TS:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_TS:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_TS:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_TS:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_TS:MODULE_1:g1:a0:xneq\
	\ADC_TS:MODULE_1:g1:a0:xlt\
	\ADC_TS:MODULE_1:g1:a0:xlte\
	\ADC_TS:MODULE_1:g1:a0:xgt\
	\ADC_TS:MODULE_1:g1:a0:xgte\
	\ADC_TS:MODULE_1:lt\
	\ADC_TS:MODULE_1:gt\
	\ADC_TS:MODULE_1:gte\
	\ADC_TS:MODULE_1:lte\
	\ADC_TS:MODULE_1:neq\


Deleted 48 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \UART:BUART:HalfDuplexSend\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:FinalParityType_1\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:FinalParityType_0\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:FinalAddrMode_2\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:FinalAddrMode_1\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:FinalAddrMode_0\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:tx_ctrl_mark\ to \UART:BUART:tx_hd_send_break\
Aliasing zero to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:tx_status_6\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:tx_status_5\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:tx_status_4\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:rx_count7_bit8_wire\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to one
Aliasing \UART:BUART:sRX:s23Poll:MODIN4_1\ to \UART:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \UART:BUART:sRX:s23Poll:MODIN4_0\ to \UART:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ to one
Aliasing \UART:BUART:sRX:s23Poll:MODIN5_1\ to \UART:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \UART:BUART:sRX:s23Poll:MODIN5_0\ to \UART:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to one
Aliasing \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:rx_status_1\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newa_6\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newa_5\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newa_4\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_6\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_5\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_4\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_3\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_2\ to one
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_1\ to one
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_0\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\ to one
Aliasing tmpOE__Rx_1_net_0 to one
Aliasing tmpOE__Tx_1_net_0 to one
Aliasing \ADC_TS:AMuxHw_2_Decoder_enable\ to one
Aliasing \ADC_TS:SAR:vp_ctl_0\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:SAR:vp_ctl_2\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:SAR:vn_ctl_1\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:SAR:vn_ctl_3\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:SAR:vp_ctl_1\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:SAR:vp_ctl_3\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:SAR:vn_ctl_0\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:SAR:vn_ctl_2\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:SAR:soc\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:bSAR_SEQ:status_7\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:bSAR_SEQ:status_6\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:bSAR_SEQ:status_5\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:bSAR_SEQ:status_4\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:bSAR_SEQ:status_3\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:bSAR_SEQ:status_2\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:bSAR_SEQ:status_1\ to \UART:BUART:tx_hd_send_break\
Aliasing Net_18 to \ADC_TS:bSAR_SEQ:status_0\
Aliasing \ADC_TS:MODULE_1:g1:a0:gx:u0:aeqb_0\ to one
Aliasing tmpOE__Pin_1_net_0 to one
Aliasing tmpOE__Pin_2_net_0 to one
Aliasing tmpOE__Pin_3_net_0 to one
Aliasing tmpOE__Pin_4_net_0 to one
Aliasing tmpOE__Pin_5_net_0 to one
Aliasing tmpOE__Pin_6_net_0 to one
Aliasing \UART:BUART:reset_reg\\D\ to \UART:BUART:tx_hd_send_break\
Aliasing \UART:BUART:rx_break_status\\D\ to \UART:BUART:tx_hd_send_break\
Aliasing \ADC_TS:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_TS:MODIN1_5\
Aliasing \ADC_TS:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_TS:MODIN1_4\
Aliasing \ADC_TS:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_TS:MODIN1_3\
Aliasing \ADC_TS:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_TS:MODIN1_2\
Aliasing \ADC_TS:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_TS:MODIN1_1\
Aliasing \ADC_TS:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_TS:MODIN1_0\
Removing Rhs of wire Net_9[3] = \UART:BUART:rx_interrupt_out\[23]
Removing Lhs of wire \UART:Net_61\[4] = \UART:Net_9\[1]
Removing Lhs of wire \UART:BUART:HalfDuplexSend\[10] = \UART:BUART:tx_hd_send_break\[9]
Removing Lhs of wire \UART:BUART:FinalParityType_1\[11] = \UART:BUART:tx_hd_send_break\[9]
Removing Lhs of wire \UART:BUART:FinalParityType_0\[12] = \UART:BUART:tx_hd_send_break\[9]
Removing Lhs of wire \UART:BUART:FinalAddrMode_2\[13] = \UART:BUART:tx_hd_send_break\[9]
Removing Lhs of wire \UART:BUART:FinalAddrMode_1\[14] = \UART:BUART:tx_hd_send_break\[9]
Removing Lhs of wire \UART:BUART:FinalAddrMode_0\[15] = \UART:BUART:tx_hd_send_break\[9]
Removing Lhs of wire \UART:BUART:tx_ctrl_mark\[16] = \UART:BUART:tx_hd_send_break\[9]
Removing Rhs of wire \UART:BUART:tx_bitclk_enable_pre\[27] = \UART:BUART:tx_bitclk_dp\[64]
Removing Rhs of wire zero[28] = \UART:BUART:tx_hd_send_break\[9]
Removing Lhs of wire \UART:BUART:tx_counter_tc\[74] = \UART:BUART:tx_counter_dp\[65]
Removing Lhs of wire \UART:BUART:tx_status_6\[75] = zero[28]
Removing Lhs of wire \UART:BUART:tx_status_5\[76] = zero[28]
Removing Lhs of wire \UART:BUART:tx_status_4\[77] = zero[28]
Removing Lhs of wire \UART:BUART:tx_status_1\[79] = \UART:BUART:tx_fifo_empty\[42]
Removing Lhs of wire \UART:BUART:tx_status_3\[81] = \UART:BUART:tx_fifo_notfull\[41]
Removing Lhs of wire \UART:BUART:rx_count7_bit8_wire\[141] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_1\[149] = \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\[160]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_0\[151] = \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\[161]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_3\[152] = \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\[177]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[153] = \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[191]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_1\[154] = \UART:BUART:sRX:s23Poll:MODIN3_1\[155]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN3_1\[155] = \UART:BUART:pollcount_1\[147]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_0\[156] = \UART:BUART:sRX:s23Poll:MODIN3_0\[157]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN3_0\[157] = \UART:BUART:pollcount_0\[150]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[163] = one[6]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[164] = one[6]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\[165] = \UART:BUART:pollcount_1\[147]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN4_1\[166] = \UART:BUART:pollcount_1\[147]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\[167] = \UART:BUART:pollcount_0\[150]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN4_0\[168] = \UART:BUART:pollcount_0\[150]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\[169] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\[170] = one[6]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\[171] = \UART:BUART:pollcount_1\[147]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\[172] = \UART:BUART:pollcount_0\[150]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\[173] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\[174] = one[6]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[179] = \UART:BUART:pollcount_1\[147]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN5_1\[180] = \UART:BUART:pollcount_1\[147]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[181] = \UART:BUART:pollcount_0\[150]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN5_0\[182] = \UART:BUART:pollcount_0\[150]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[183] = one[6]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[184] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[185] = \UART:BUART:pollcount_1\[147]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[186] = \UART:BUART:pollcount_0\[150]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[187] = one[6]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[188] = zero[28]
Removing Lhs of wire \UART:BUART:rx_status_1\[195] = zero[28]
Removing Rhs of wire \UART:BUART:rx_status_2\[196] = \UART:BUART:rx_parity_error_status\[197]
Removing Rhs of wire \UART:BUART:rx_status_3\[198] = \UART:BUART:rx_stop_bit_error\[199]
Removing Lhs of wire \UART:BUART:sRX:cmp_vv_vv_MODGEN_5\[209] = \UART:BUART:sRX:MODULE_5:g2:a0:lta_0\[258]
Removing Lhs of wire \UART:BUART:sRX:cmp_vv_vv_MODGEN_6\[213] = \UART:BUART:sRX:MODULE_6:g1:a0:xneq\[280]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_6\[214] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_5\[215] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_4\[216] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_3\[217] = \UART:BUART:sRX:MODIN6_6\[218]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_6\[218] = \UART:BUART:rx_count_6\[136]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_2\[219] = \UART:BUART:sRX:MODIN6_5\[220]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_5\[220] = \UART:BUART:rx_count_5\[137]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_1\[221] = \UART:BUART:sRX:MODIN6_4\[222]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_4\[222] = \UART:BUART:rx_count_4\[138]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_0\[223] = \UART:BUART:sRX:MODIN6_3\[224]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_3\[224] = \UART:BUART:rx_count_3\[139]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_6\[225] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_5\[226] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_4\[227] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_3\[228] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_2\[229] = one[6]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_1\[230] = one[6]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_0\[231] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_6\[232] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_5\[233] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_4\[234] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_3\[235] = \UART:BUART:rx_count_6\[136]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_2\[236] = \UART:BUART:rx_count_5\[137]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_1\[237] = \UART:BUART:rx_count_4\[138]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_0\[238] = \UART:BUART:rx_count_3\[139]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_6\[239] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_5\[240] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_4\[241] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_3\[242] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_2\[243] = one[6]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_1\[244] = one[6]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_0\[245] = zero[28]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:newa_0\[260] = \UART:BUART:rx_postpoll\[95]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:newb_0\[261] = \UART:BUART:rx_parity_bit\[212]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:dataa_0\[262] = \UART:BUART:rx_postpoll\[95]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:datab_0\[263] = \UART:BUART:rx_parity_bit\[212]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:a_0\[264] = \UART:BUART:rx_postpoll\[95]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:b_0\[265] = \UART:BUART:rx_parity_bit\[212]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\[267] = one[6]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eq_0\[268] = \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[266]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eqi_0\[269] = \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[266]
Removing Lhs of wire tmpOE__Rx_1_net_0[291] = one[6]
Removing Lhs of wire tmpOE__Tx_1_net_0[296] = one[6]
Removing Lhs of wire \ADC_TS:AMuxHw_2_Decoder_enable\[302] = one[6]
Removing Lhs of wire \ADC_TS:cmp_vv_vv_MODGEN_1\[304] = \ADC_TS:MODULE_1:g1:a0:xeq\[639]
Removing Rhs of wire \ADC_TS:clock\[305] = \ADC_TS:Net_3874\[539]
Removing Rhs of wire \ADC_TS:ch_addr_5\[307] = \ADC_TS:bSAR_SEQ:count_5\[506]
Removing Rhs of wire \ADC_TS:ch_addr_4\[309] = \ADC_TS:bSAR_SEQ:count_4\[507]
Removing Rhs of wire \ADC_TS:ch_addr_3\[311] = \ADC_TS:bSAR_SEQ:count_3\[508]
Removing Rhs of wire \ADC_TS:ch_addr_2\[313] = \ADC_TS:bSAR_SEQ:count_2\[509]
Removing Rhs of wire \ADC_TS:ch_addr_1\[315] = \ADC_TS:bSAR_SEQ:count_1\[510]
Removing Rhs of wire \ADC_TS:ch_addr_0\[317] = \ADC_TS:bSAR_SEQ:count_0\[511]
Removing Lhs of wire \ADC_TS:SAR:vp_ctl_0\[451] = zero[28]
Removing Lhs of wire \ADC_TS:SAR:vp_ctl_2\[452] = zero[28]
Removing Lhs of wire \ADC_TS:SAR:vn_ctl_1\[453] = zero[28]
Removing Lhs of wire \ADC_TS:SAR:vn_ctl_3\[454] = zero[28]
Removing Lhs of wire \ADC_TS:SAR:vp_ctl_1\[455] = zero[28]
Removing Lhs of wire \ADC_TS:SAR:vp_ctl_3\[456] = zero[28]
Removing Lhs of wire \ADC_TS:SAR:vn_ctl_0\[457] = zero[28]
Removing Lhs of wire \ADC_TS:SAR:vn_ctl_2\[458] = zero[28]
Removing Lhs of wire \ADC_TS:SAR:Net_188\[459] = \ADC_TS:clock\[305]
Removing Lhs of wire \ADC_TS:SAR:soc\[465] = zero[28]
Removing Rhs of wire \ADC_TS:bSAR_SEQ:enable\[496] = \ADC_TS:bSAR_SEQ:control_0\[497]
Removing Rhs of wire \ADC_TS:bSAR_SEQ:load_period\[498] = \ADC_TS:bSAR_SEQ:control_1\[499]
Removing Lhs of wire \ADC_TS:bSAR_SEQ:status_7\[512] = zero[28]
Removing Lhs of wire \ADC_TS:bSAR_SEQ:status_6\[513] = zero[28]
Removing Lhs of wire \ADC_TS:bSAR_SEQ:status_5\[514] = zero[28]
Removing Lhs of wire \ADC_TS:bSAR_SEQ:status_4\[515] = zero[28]
Removing Lhs of wire \ADC_TS:bSAR_SEQ:status_3\[516] = zero[28]
Removing Lhs of wire \ADC_TS:bSAR_SEQ:status_2\[517] = zero[28]
Removing Lhs of wire \ADC_TS:bSAR_SEQ:status_1\[518] = zero[28]
Removing Rhs of wire \ADC_TS:bSAR_SEQ:status_0\[519] = \ADC_TS:bSAR_SEQ:nrq_edge_detect_reg\[520]
Removing Rhs of wire Net_18[527] = \ADC_TS:bSAR_SEQ:status_0\[519]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newa_5\[550] = \ADC_TS:MODIN1_5\[551]
Removing Lhs of wire \ADC_TS:MODIN1_5\[551] = \ADC_TS:ch_addr_5\[307]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newa_4\[552] = \ADC_TS:MODIN1_4\[553]
Removing Lhs of wire \ADC_TS:MODIN1_4\[553] = \ADC_TS:ch_addr_4\[309]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newa_3\[554] = \ADC_TS:MODIN1_3\[555]
Removing Lhs of wire \ADC_TS:MODIN1_3\[555] = \ADC_TS:ch_addr_3\[311]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newa_2\[556] = \ADC_TS:MODIN1_2\[557]
Removing Lhs of wire \ADC_TS:MODIN1_2\[557] = \ADC_TS:ch_addr_2\[313]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newa_1\[558] = \ADC_TS:MODIN1_1\[559]
Removing Lhs of wire \ADC_TS:MODIN1_1\[559] = \ADC_TS:ch_addr_1\[315]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newa_0\[560] = \ADC_TS:MODIN1_0\[561]
Removing Lhs of wire \ADC_TS:MODIN1_0\[561] = \ADC_TS:ch_addr_0\[317]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newb_5\[562] = \ADC_TS:MODIN2_5\[563]
Removing Lhs of wire \ADC_TS:MODIN2_5\[563] = \ADC_TS:AMuxHw_2_Decoder_old_id_5\[306]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newb_4\[564] = \ADC_TS:MODIN2_4\[565]
Removing Lhs of wire \ADC_TS:MODIN2_4\[565] = \ADC_TS:AMuxHw_2_Decoder_old_id_4\[308]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newb_3\[566] = \ADC_TS:MODIN2_3\[567]
Removing Lhs of wire \ADC_TS:MODIN2_3\[567] = \ADC_TS:AMuxHw_2_Decoder_old_id_3\[310]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newb_2\[568] = \ADC_TS:MODIN2_2\[569]
Removing Lhs of wire \ADC_TS:MODIN2_2\[569] = \ADC_TS:AMuxHw_2_Decoder_old_id_2\[312]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newb_1\[570] = \ADC_TS:MODIN2_1\[571]
Removing Lhs of wire \ADC_TS:MODIN2_1\[571] = \ADC_TS:AMuxHw_2_Decoder_old_id_1\[314]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:newb_0\[572] = \ADC_TS:MODIN2_0\[573]
Removing Lhs of wire \ADC_TS:MODIN2_0\[573] = \ADC_TS:AMuxHw_2_Decoder_old_id_0\[316]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:dataa_5\[574] = \ADC_TS:ch_addr_5\[307]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:dataa_4\[575] = \ADC_TS:ch_addr_4\[309]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:dataa_3\[576] = \ADC_TS:ch_addr_3\[311]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:dataa_2\[577] = \ADC_TS:ch_addr_2\[313]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:dataa_1\[578] = \ADC_TS:ch_addr_1\[315]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:dataa_0\[579] = \ADC_TS:ch_addr_0\[317]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:datab_5\[580] = \ADC_TS:AMuxHw_2_Decoder_old_id_5\[306]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:datab_4\[581] = \ADC_TS:AMuxHw_2_Decoder_old_id_4\[308]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:datab_3\[582] = \ADC_TS:AMuxHw_2_Decoder_old_id_3\[310]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:datab_2\[583] = \ADC_TS:AMuxHw_2_Decoder_old_id_2\[312]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:datab_1\[584] = \ADC_TS:AMuxHw_2_Decoder_old_id_1\[314]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:datab_0\[585] = \ADC_TS:AMuxHw_2_Decoder_old_id_0\[316]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:a_5\[586] = \ADC_TS:ch_addr_5\[307]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:a_4\[587] = \ADC_TS:ch_addr_4\[309]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:a_3\[588] = \ADC_TS:ch_addr_3\[311]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:a_2\[589] = \ADC_TS:ch_addr_2\[313]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:a_1\[590] = \ADC_TS:ch_addr_1\[315]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:a_0\[591] = \ADC_TS:ch_addr_0\[317]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:b_5\[592] = \ADC_TS:AMuxHw_2_Decoder_old_id_5\[306]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:b_4\[593] = \ADC_TS:AMuxHw_2_Decoder_old_id_4\[308]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:b_3\[594] = \ADC_TS:AMuxHw_2_Decoder_old_id_3\[310]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:b_2\[595] = \ADC_TS:AMuxHw_2_Decoder_old_id_2\[312]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:b_1\[596] = \ADC_TS:AMuxHw_2_Decoder_old_id_1\[314]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:b_0\[597] = \ADC_TS:AMuxHw_2_Decoder_old_id_0\[316]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:aeqb_0\[604] = one[6]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:eq_0\[605] = \ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_0\[603]
Removing Lhs of wire \ADC_TS:MODULE_1:g1:a0:gx:u0:eqi_0\[611] = \ADC_TS:MODULE_1:g1:a0:gx:u0:eq_5\[610]
Removing Rhs of wire \ADC_TS:MODULE_1:g1:a0:xeq\[639] = \ADC_TS:MODULE_1:g1:a0:gx:u0:aeqb_1\[612]
Removing Lhs of wire tmpOE__Pin_1_net_0[651] = one[6]
Removing Lhs of wire tmpOE__Pin_2_net_0[657] = one[6]
Removing Lhs of wire tmpOE__Pin_3_net_0[663] = one[6]
Removing Lhs of wire tmpOE__Pin_4_net_0[669] = one[6]
Removing Lhs of wire tmpOE__Pin_5_net_0[675] = one[6]
Removing Lhs of wire tmpOE__Pin_6_net_0[681] = one[6]
Removing Lhs of wire \UART:BUART:reset_reg\\D\[686] = zero[28]
Removing Lhs of wire \UART:BUART:rx_bitclk\\D\[701] = \UART:BUART:rx_bitclk_pre\[130]
Removing Lhs of wire \UART:BUART:rx_parity_error_pre\\D\[710] = \UART:BUART:rx_parity_error_pre\[207]
Removing Lhs of wire \UART:BUART:rx_break_status\\D\[711] = zero[28]
Removing Lhs of wire \ADC_TS:AMuxHw_2_Decoder_old_id_5\\D\[715] = \ADC_TS:ch_addr_5\[307]
Removing Lhs of wire \ADC_TS:AMuxHw_2_Decoder_old_id_4\\D\[716] = \ADC_TS:ch_addr_4\[309]
Removing Lhs of wire \ADC_TS:AMuxHw_2_Decoder_old_id_3\\D\[717] = \ADC_TS:ch_addr_3\[311]
Removing Lhs of wire \ADC_TS:AMuxHw_2_Decoder_old_id_2\\D\[718] = \ADC_TS:ch_addr_2\[313]
Removing Lhs of wire \ADC_TS:AMuxHw_2_Decoder_old_id_1\\D\[719] = \ADC_TS:ch_addr_1\[315]
Removing Lhs of wire \ADC_TS:AMuxHw_2_Decoder_old_id_0\\D\[720] = \ADC_TS:ch_addr_0\[317]
Removing Lhs of wire \ADC_TS:bSAR_SEQ:nrq_edge_detect_reg\\D\[785] = \ADC_TS:bSAR_SEQ:nrq_edge_detect\[526]
Removing Lhs of wire \ADC_TS:bSAR_SEQ:nrq_reg\\D\[787] = \ADC_TS:bSAR_SEQ:bus_clk_nrq_reg\[523]

------------------------------------------------------
Aliased 0 equations, 196 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:rx_addressmatch\' (cost = 0):
\UART:BUART:rx_addressmatch\ <= (\UART:BUART:rx_addressmatch2\
	OR \UART:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\UART:BUART:rx_bitclk_pre\' (cost = 1):
\UART:BUART:rx_bitclk_pre\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_bitclk_pre16x\' (cost = 0):
\UART:BUART:rx_bitclk_pre16x\ <= ((not \UART:BUART:rx_count_2\ and \UART:BUART:rx_count_1\ and \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_poll_bit1\' (cost = 1):
\UART:BUART:rx_poll_bit1\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_poll_bit2\' (cost = 1):
\UART:BUART:rx_poll_bit2\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:pollingrange\' (cost = 4):
\UART:BUART:pollingrange\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\UART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\ <= (not \UART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ <= (\UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <= (not \UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_6\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_6\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_5\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_5\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_4\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_4\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_3\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_3\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_3\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_2\' (cost = 1):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_2\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_2\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_2\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_1\' (cost = 2):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_1\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_4\)
	OR (not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_1\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_0\' (cost = 8):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_0\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_4\)
	OR (not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_TS:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_TS:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_TS:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_TS:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_TS:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_TS:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_TS:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_TS:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_TS:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_TS:ch_addr_4\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_TS:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_4\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_TS:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_TS:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_TS:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_TS:ch_addr_1\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_TS:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_1\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\' (cost = 4):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ <= ((not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= (not \UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\' (cost = 2):
\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\ <= ((not \UART:BUART:pollcount_0\ and \UART:BUART:pollcount_1\)
	OR (not \UART:BUART:pollcount_1\ and \UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\ADC_TS:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_TS:MODULE_1:g1:a0:xeq\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Expanding virtual equation for '\UART:BUART:rx_postpoll\' (cost = 72):
\UART:BUART:rx_postpoll\ <= (\UART:BUART:pollcount_1\
	OR (Net_7 and \UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\ <= ((not \UART:BUART:pollcount_1\ and not Net_7 and not \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and not \UART:BUART:rx_parity_bit\)
	OR (\UART:BUART:pollcount_1\ and \UART:BUART:rx_parity_bit\)
	OR (Net_7 and \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\ <= ((not \UART:BUART:pollcount_1\ and not Net_7 and not \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and not \UART:BUART:rx_parity_bit\)
	OR (\UART:BUART:pollcount_1\ and \UART:BUART:rx_parity_bit\)
	OR (Net_7 and \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\));

Note:  Virtual signal \ADC_TS:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_TS:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS:ch_addr_0\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (not \ADC_TS:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\)
	OR (\ADC_TS:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS:ch_addr_5\ and \ADC_TS:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS:ch_addr_4\ and \ADC_TS:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS:ch_addr_3\ and \ADC_TS:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS:ch_addr_2\ and \ADC_TS:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS:ch_addr_1\ and \ADC_TS:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 53 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \UART:BUART:rx_status_0\ to zero
Aliasing \UART:BUART:rx_status_6\ to zero
Aliasing \UART:BUART:rx_markspace_status\\D\ to zero
Aliasing \UART:BUART:rx_parity_error_status\\D\ to zero
Aliasing \UART:BUART:rx_addr_match_status\\D\ to zero
Removing Rhs of wire \UART:BUART:rx_bitclk_enable\[94] = \UART:BUART:rx_bitclk\[142]
Removing Lhs of wire \UART:BUART:rx_status_0\[193] = zero[28]
Removing Lhs of wire \UART:BUART:rx_status_6\[202] = zero[28]
Removing Lhs of wire \UART:BUART:tx_ctrl_mark_last\\D\[693] = \UART:BUART:tx_ctrl_mark_last\[85]
Removing Lhs of wire \UART:BUART:rx_markspace_status\\D\[705] = zero[28]
Removing Lhs of wire \UART:BUART:rx_parity_error_status\\D\[706] = zero[28]
Removing Lhs of wire \UART:BUART:rx_addr_match_status\\D\[708] = zero[28]
Removing Lhs of wire \UART:BUART:rx_markspace_pre\\D\[709] = \UART:BUART:rx_markspace_pre\[206]
Removing Lhs of wire \UART:BUART:rx_parity_bit\\D\[714] = \UART:BUART:rx_parity_bit\[212]

------------------------------------------------------
Aliased 0 equations, 9 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\UART:BUART:sRX:MODULE_6:g1:a0:xneq\ <= ((not \UART:BUART:rx_parity_bit\ and Net_7 and \UART:BUART:pollcount_0\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:pollcount_1\ and not Net_7 and \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:rx_parity_bit\ and \UART:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\UART_test.cyprj -dcpsoc3 UART_test.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 2s.401ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.1.0.3210, Family: PSoC3, Started at: Friday, 15 September 2017 12:54:01
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Dropbox\Magister\Tesis\tesis-source\master-tesis\UART_test.cydsn\UART_test.cyprj -d CY8C5888LTI-LP097 UART_test.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.234ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_TS:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_TS:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_TS:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_TS:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_TS:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_TS:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_TS:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_TS:MODULE_1:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \UART:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_break_status\ from registered to combinatorial
Assigning clock ADC_TS_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'ADC_TS_IntClock'. Fanout=73, Signal=\ADC_TS:clock\
    Digital Clock 1: Automatic-assigning  clock 'UART_IntClock'. Fanout=1, Signal=\UART:Net_9\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \UART:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \ADC_TS:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_TS_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_TS:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_TS_IntClock, EnableOut: \ADC_TS:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_TS:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_TS_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_TS_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 4 pin(s) will be assigned a location by the fitter: Pin_3(0), Pin_4(0), Pin_5(0), Pin_6(0)


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \UART:BUART:rx_parity_bit\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_parity_bit\ (fanout=0)

    Removing \UART:BUART:rx_address_detected\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_address_detected\ (fanout=0)

    Removing \UART:BUART:rx_parity_error_pre\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \UART:BUART:rx_markspace_pre\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_markspace_pre\ (fanout=0)

    Removing \UART:BUART:rx_state_1\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_state_1\ (fanout=8)

    Removing \UART:BUART:tx_parity_bit\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART:BUART:tx_mark\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_mark\ (fanout=0)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = Rx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Rx_1(0)__PA ,
            fb => Net_7 ,
            pad => Rx_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Tx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Tx_1(0)__PA ,
            pin_input => Net_2 ,
            pad => Tx_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_1(0)__PA ,
            analog_term => Net_19 ,
            pad => Pin_1(0)_PAD ,
            pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = Pin_2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_2(0)__PA ,
            analog_term => Net_20 ,
            pad => Pin_2(0)_PAD ,
            pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = Pin_3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_3(0)__PA ,
            analog_term => Net_22 ,
            pad => Pin_3(0)_PAD ,
            pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_2\ );

    Pin : Name = Pin_4(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_4(0)__PA ,
            analog_term => Net_23 ,
            pad => Pin_4(0)_PAD ,
            pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_3\ );

    Pin : Name = Pin_5(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_5(0)__PA ,
            analog_term => Net_25 ,
            pad => Pin_5(0)_PAD ,
            pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_4\ );

    Pin : Name = Pin_6(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_6(0)__PA ,
            analog_term => Net_27 ,
            pad => Pin_6(0)_PAD ,
            pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_5\ );
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * !\ADC_TS:ch_addr_5\
            + \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * !\ADC_TS:ch_addr_4\
            + \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * !\ADC_TS:ch_addr_3\
            + \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * !\ADC_TS:ch_addr_2\
            + !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * \ADC_TS:ch_addr_1\
            + \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * !\ADC_TS:ch_addr_1\
            + !\ADC_TS:AMuxHw_2_Decoder_old_id_0\ * \ADC_TS:ch_addr_0\
            + \ADC_TS:AMuxHw_2_Decoder_old_id_0\ * !\ADC_TS:ch_addr_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=Net_2, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:txn\
        );
        Output = Net_2 (fanout=1)

    MacroCell: Name=\UART:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_fifo_notfull\
        );
        Output = \UART:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART:BUART:pollcount_1\
            + Net_7 * \UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_load_fifo\ * \UART:BUART:rx_fifofull\
        );
        Output = \UART:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_fifonotempty\ * \UART:BUART:rx_state_stop1_reg\
        );
        Output = \UART:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * \ADC_TS:ch_addr_5\
            + !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * \ADC_TS:ch_addr_4\
            + !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * \ADC_TS:ch_addr_3\
            + !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * \ADC_TS:ch_addr_2\
            + \ADC_TS:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_TS:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_17 * !\ADC_TS:bSAR_SEQ:load_period\
        );
        Output = \ADC_TS:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\UART:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART:BUART:txn\ * \UART:BUART:tx_state_1\ * 
              !\UART:BUART:tx_bitclk\
            + \UART:BUART:txn\ * \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * !\UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\ * 
              !\UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:txn\ (fanout=2)

    MacroCell: Name=\UART:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\UART:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * !\UART:BUART:tx_fifo_empty\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_fifo_empty\ * !\UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\UART:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\UART:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\UART:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_ctrl_mark_last\ (fanout=8)

    MacroCell: Name=\UART:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * !Net_7
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\UART:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\UART:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\UART:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * !Net_7 * 
              \UART:BUART:rx_last\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\UART:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:rx_count_0\
        );
        Output = \UART:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\UART:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\UART:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_1\ * Net_7 * \UART:BUART:pollcount_0\
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !Net_7
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\UART:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * !Net_7 * 
              \UART:BUART:pollcount_0\
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * Net_7 * 
              !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\UART:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * !Net_7
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_7
        );
        Output = \UART:BUART:rx_last\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_5\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_4\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_3\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_2\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_1\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_18, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: PosEdge(\ADC_TS:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_TS:bSAR_SEQ:bus_clk_nrq_reg\ * !\ADC_TS:bSAR_SEQ:nrq_reg\
        );
        Output = Net_18 (fanout=3)

    MacroCell: Name=\ADC_TS:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_TS:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_18
            + \ADC_TS:Net_3935\
        );
        Output = \ADC_TS:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_TS:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: PosEdge(\ADC_TS:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_TS:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_TS:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\UART:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_2 => \UART:BUART:tx_state_1\ ,
            cs_addr_1 => \UART:BUART:tx_state_0\ ,
            cs_addr_0 => \UART:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_0 => \UART:BUART:counter_load_not\ ,
            ce0_reg => \UART:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_2 => \UART:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \UART:BUART:rx_state_0\ ,
            cs_addr_0 => \UART:BUART:rx_bitclk_enable\ ,
            route_si => \UART:BUART:rx_postpoll\ ,
            f0_load => \UART:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \UART:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \UART:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_TS:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_TS:clock\ ,
            status_0 => Net_18 ,
            clk_en => \ADC_TS:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_TS:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\UART:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART:Net_9\ ,
            status_3 => \UART:BUART:tx_fifo_notfull\ ,
            status_2 => \UART:BUART:tx_status_2\ ,
            status_1 => \UART:BUART:tx_fifo_empty\ ,
            status_0 => \UART:BUART:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART:BUART:sRX:RxSts\
        PORT MAP (
            clock => \UART:Net_9\ ,
            status_5 => \UART:BUART:rx_status_5\ ,
            status_4 => \UART:BUART:rx_status_4\ ,
            status_3 => \UART:BUART:rx_status_3\ ,
            interrupt => Net_9 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_TS:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_TS:nrq\ ,
            out => \ADC_TS:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ADC_TS:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_TS:clock\ ,
            control_7 => \ADC_TS:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_TS:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_TS:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_TS:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_TS:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_TS:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_TS:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_TS:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\UART:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \UART:Net_9\ ,
            load => \UART:BUART:rx_counter_load\ ,
            count_6 => \UART:BUART:rx_count_6\ ,
            count_5 => \UART:BUART:rx_count_5\ ,
            count_4 => \UART:BUART:rx_count_4\ ,
            count_3 => \UART:BUART:rx_count_3\ ,
            count_2 => \UART:BUART:rx_count_2\ ,
            count_1 => \UART:BUART:rx_count_1\ ,
            count_0 => \UART:BUART:rx_count_0\ ,
            tc => \UART:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    count7cell: Name =\ADC_TS:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_TS:clock\ ,
            load => \ADC_TS:bSAR_SEQ:load_period\ ,
            enable => \ADC_TS:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_TS:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_TS:ch_addr_5\ ,
            count_4 => \ADC_TS:ch_addr_4\ ,
            count_3 => \ADC_TS:ch_addr_3\ ,
            count_2 => \ADC_TS:ch_addr_2\ ,
            count_1 => \ADC_TS:ch_addr_1\ ,
            count_0 => \ADC_TS:ch_addr_0\ ,
            tc => \ADC_TS:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_TS:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000101"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_TS:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_TS:TempBuf\
        PORT MAP (
            dmareq => \ADC_TS:Net_3830\ ,
            termin => zero ,
            termout => \ADC_TS:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_TS:FinalBuf\
        PORT MAP (
            dmareq => \ADC_TS:Net_3698\ ,
            termin => zero ,
            termout => \ADC_TS:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\UART:RXInternalInterrupt\
        PORT MAP (
            interrupt => Net_9 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =RxInt
        PORT MAP (
            interrupt => Net_9 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }

    interrupt: Name =\ADC_TS:IRQ\
        PORT MAP (
            interrupt => Net_18 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    2 :    6 :    8 : 25.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    3 :   29 :   32 :  9.38 %
IO                            :   11 :   37 :   48 : 22.92 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :  100 :   92 :  192 : 52.08 %
  Unique P-terms              :  132 :  252 :  384 : 34.38 %
  Total P-terms               :  141 :      :      :        
  Datapath Cells              :    3 :   21 :   24 : 12.50 %
  Status Cells                :    6 :   18 :   24 : 25.00 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    2 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    3 :   21 :   24 : 12.50 %
    Control Registers         :    1 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 1s.344ms
Tech Mapping phase: Elapsed time ==> 1s.769ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_28" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_30" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_32" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_33" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_35" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_37" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_38" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_40" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_42" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_43" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_45" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_47" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_48" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_50" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_52" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_53" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_55" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_57" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_58" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_60" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_62" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_63" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_65" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_67" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_68" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_70" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_72" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_73" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_75" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_77" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_78" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_80" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_82" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_83" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_85" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_87" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_88" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_90" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_92" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_93" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_95" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_97" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_98" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_99" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_100" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_101" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_102" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_103" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_104" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_105" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_106" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_107" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_108" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_109" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_110" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_111" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_112" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_113" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_6@[IOP=(3)][IoId=(6)] : Pin_1(0) (fixed)
IO_7@[IOP=(3)][IoId=(7)] : Pin_2(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : Pin_3(0)
IO_5@[IOP=(15)][IoId=(5)] : Pin_4(0)
IO_7@[IOP=(0)][IoId=(7)] : Pin_5(0)
IO_7@[IOP=(1)][IoId=(7)] : Pin_6(0)
SAR[1]@[FFB(SAR,1)] : \ADC_TS:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_TS:SAR:vRef_Vdda_1\
Log: apr.M0058: The analog placement iterative improvement is 46% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 69% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 100% done. (App=cydsfit)
Analog Placement Results:
IO_6@[IOP=(3)][IoId=(6)] : Pin_1(0) (fixed)
IO_7@[IOP=(3)][IoId=(7)] : Pin_2(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : Pin_3(0)
IO_2@[IOP=(3)][IoId=(2)] : Pin_4(0)
IO_4@[IOP=(3)][IoId=(4)] : Pin_5(0)
IO_3@[IOP=(3)][IoId=(3)] : Pin_6(0)
SAR[1]@[FFB(SAR,1)] : \ADC_TS:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_TS:SAR:vRef_Vdda_1\

Analog Placement phase: Elapsed time ==> 23s.655ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.083ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC_TS:Net_2803\ {
    sar_1_vplus
  }
  Net: Net_19 {
    p3_6
  }
  Net: Net_20 {
    p3_7
  }
  Net: Net_22 {
    p15_3
  }
  Net: Net_23 {
    p3_2
  }
  Net: Net_25 {
    p15_2
  }
  Net: Net_27 {
    p3_3
  }
  Net: Net_28 {
  }
  Net: Net_30 {
  }
  Net: Net_32 {
  }
  Net: Net_33 {
  }
  Net: Net_35 {
  }
  Net: Net_37 {
  }
  Net: Net_38 {
  }
  Net: Net_40 {
  }
  Net: Net_42 {
  }
  Net: Net_43 {
  }
  Net: Net_45 {
  }
  Net: Net_47 {
  }
  Net: Net_48 {
  }
  Net: Net_50 {
  }
  Net: Net_52 {
  }
  Net: Net_53 {
  }
  Net: Net_55 {
  }
  Net: Net_57 {
  }
  Net: Net_58 {
  }
  Net: Net_60 {
  }
  Net: Net_62 {
  }
  Net: Net_63 {
  }
  Net: Net_65 {
  }
  Net: Net_67 {
  }
  Net: Net_68 {
  }
  Net: Net_70 {
  }
  Net: Net_72 {
  }
  Net: Net_73 {
  }
  Net: Net_75 {
  }
  Net: Net_77 {
  }
  Net: Net_78 {
  }
  Net: Net_80 {
  }
  Net: Net_82 {
  }
  Net: Net_83 {
  }
  Net: Net_85 {
  }
  Net: Net_87 {
  }
  Net: Net_88 {
  }
  Net: Net_90 {
  }
  Net: Net_92 {
  }
  Net: Net_93 {
  }
  Net: Net_95 {
  }
  Net: Net_97 {
  }
  Net: Net_98 {
  }
  Net: Net_99 {
  }
  Net: Net_100 {
  }
  Net: Net_101 {
  }
  Net: Net_102 {
  }
  Net: Net_103 {
  }
  Net: Net_104 {
  }
  Net: Net_105 {
  }
  Net: Net_106 {
  }
  Net: Net_107 {
  }
  Net: Net_108 {
  }
  Net: Net_109 {
  }
  Net: Net_110 {
  }
  Net: Net_111 {
  }
  Net: Net_112 {
  }
  Net: Net_113 {
  }
  Net: \ADC_TS:SAR:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \ADC_TS:SAR:Net_209\ {
  }
  Net: \ADC_TS:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2
    sar_1_vref_vdda_vdda_2
    sar_1_vref_x_sar_1_vref_vdda_vdda_2
    sar_1_vref
  }
  Net: AmuxNet::\ADC_TS:AMuxHw_2\ {
    sar_1_vplus
    agr6_x_sar_1_vplus
    agr6
    agr6_x_p3_6
    agr7_x_sar_1_vplus
    agr7
    agr7_x_p3_7
    agr7_x_p3_3
    agr6_x_p15_2
    agr6_x_p3_2
    agr7_x_p15_3
    p3_6
    p3_7
    p3_3
    p15_2
    p3_2
    p15_3
  }
}
Map of item to net {
  sar_1_vrefhi                                     -> \ADC_TS:SAR:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \ADC_TS:SAR:Net_126\
  sar_1_vminus                                     -> \ADC_TS:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \ADC_TS:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2  -> \ADC_TS:SAR:Net_235\
  sar_1_vref_vdda_vdda_2                           -> \ADC_TS:SAR:Net_235\
  sar_1_vref_x_sar_1_vref_vdda_vdda_2              -> \ADC_TS:SAR:Net_235\
  sar_1_vref                                       -> \ADC_TS:SAR:Net_235\
  sar_1_vplus                                      -> \ADC_TS:Net_2803\
  p3_6                                             -> Net_19
  p3_7                                             -> Net_20
  p15_3                                            -> Net_22
  p3_2                                             -> Net_23
  p15_2                                            -> Net_25
  p3_3                                             -> Net_27
  agr6_x_sar_1_vplus                               -> AmuxNet::\ADC_TS:AMuxHw_2\
  agr6                                             -> AmuxNet::\ADC_TS:AMuxHw_2\
  agr6_x_p3_6                                      -> AmuxNet::\ADC_TS:AMuxHw_2\
  agr7_x_sar_1_vplus                               -> AmuxNet::\ADC_TS:AMuxHw_2\
  agr7                                             -> AmuxNet::\ADC_TS:AMuxHw_2\
  agr7_x_p3_7                                      -> AmuxNet::\ADC_TS:AMuxHw_2\
  agr7_x_p3_3                                      -> AmuxNet::\ADC_TS:AMuxHw_2\
  agr6_x_p15_2                                     -> AmuxNet::\ADC_TS:AMuxHw_2\
  agr6_x_p3_2                                      -> AmuxNet::\ADC_TS:AMuxHw_2\
  agr7_x_p15_3                                     -> AmuxNet::\ADC_TS:AMuxHw_2\
}
Mux Info {
  Mux: \ADC_TS:AMuxHw_2\ {
     Mouth: \ADC_TS:Net_2803\
     Guts:  AmuxNet::\ADC_TS:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_19
      Outer: agr6_x_p3_6
      Inner: __open__
      Path {
        p3_6
        agr6_x_p3_6
        agr6
        agr6_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 1 {
      Net:   Net_20
      Outer: agr7_x_p3_7
      Inner: __open__
      Path {
        p3_7
        agr7_x_p3_7
        agr7
        agr7_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 2 {
      Net:   Net_22
      Outer: agr7_x_p15_3
      Inner: __open__
      Path {
        p15_3
        agr7_x_p15_3
        agr7
        agr7_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 3 {
      Net:   Net_23
      Outer: agr6_x_p3_2
      Inner: __open__
      Path {
        p3_2
        agr6_x_p3_2
        agr6
        agr6_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 4 {
      Net:   Net_25
      Outer: agr6_x_p15_2
      Inner: __open__
      Path {
        p15_2
        agr6_x_p15_2
        agr6
        agr6_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 5 {
      Net:   Net_27
      Outer: agr7_x_p3_3
      Inner: __open__
      Path {
        p3_3
        agr7_x_p3_3
        agr7
        agr7_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 6 {
      Net:   Net_28
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_30
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_32
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_33
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_35
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_37
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_38
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_40
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_42
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_43
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_45
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_47
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_48
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_50
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_52
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_53
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_55
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_57
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_58
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_60
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_62
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_63
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_65
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_67
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_68
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_70
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_72
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_73
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_75
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_77
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_78
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_80
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_82
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_83
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_85
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_87
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_88
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_90
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_92
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_93
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_95
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_97
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_98
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_99
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_100
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_101
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_102
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_103
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_104
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_105
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_106
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_107
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_108
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_109
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_110
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_111
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_112
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_113
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = False
IsVddaHalfUsedForSar1 = True
Analog Code Generation phase: Elapsed time ==> 0s.841ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 6.5 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   32 :   16 :   48 :  66.67%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.78
                   Pterms :            4.25
               Macrocells :            3.13
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.094ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.501ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         16 :      10.63 :       6.25
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,0)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Net_2, Mode=(Combinatorial) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:txn\
        );
        Output = Net_2 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\ADC_TS:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_TS:clock\ ,
        status_0 => Net_18 ,
        clk_en => \ADC_TS:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_TS:bSAR_SEQ:enable\)

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=1, #inputs=1, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,2)] is empty.
UDB [UDB=(0,3)] is empty.
UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=3, #inputs=8, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_3\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_2\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,5)] is empty.
UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=4, #inputs=10, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * !Net_7 * 
              \UART:BUART:rx_last\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=3, #inputs=6, #pterms=6
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\UART:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:rx_count_0\
        );
        Output = \UART:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * !Net_7 * 
              \UART:BUART:pollcount_0\
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * Net_7 * 
              !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_1\ * Net_7 * \UART:BUART:pollcount_0\
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !Net_7
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }
}

count7cell: Name =\UART:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \UART:Net_9\ ,
        load => \UART:BUART:rx_counter_load\ ,
        count_6 => \UART:BUART:rx_count_6\ ,
        count_5 => \UART:BUART:rx_count_5\ ,
        count_4 => \UART:BUART:rx_count_4\ ,
        count_3 => \UART:BUART:rx_count_3\ ,
        count_2 => \UART:BUART:rx_count_2\ ,
        count_1 => \UART:BUART:rx_count_1\ ,
        count_0 => \UART:BUART:rx_count_0\ ,
        tc => \UART:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * !\ADC_TS:ch_addr_5\
            + \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * !\ADC_TS:ch_addr_4\
            + \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * !\ADC_TS:ch_addr_3\
            + \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * !\ADC_TS:ch_addr_2\
            + !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * \ADC_TS:ch_addr_1\
            + \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * !\ADC_TS:ch_addr_1\
            + !\ADC_TS:AMuxHw_2_Decoder_old_id_0\ * \ADC_TS:ch_addr_0\
            + \ADC_TS:AMuxHw_2_Decoder_old_id_0\ * !\ADC_TS:ch_addr_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,1)][LB=1] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * !Net_7
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:rx_last\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_7
        );
        Output = \UART:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * !Net_7
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC_TS:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_TS:clock\ ,
        load => \ADC_TS:bSAR_SEQ:load_period\ ,
        enable => \ADC_TS:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_TS:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_TS:ch_addr_5\ ,
        count_4 => \ADC_TS:ch_addr_4\ ,
        count_3 => \ADC_TS:ch_addr_3\ ,
        count_2 => \ADC_TS:ch_addr_2\ ,
        count_1 => \ADC_TS:ch_addr_1\ ,
        count_0 => \ADC_TS:ch_addr_0\ ,
        tc => \ADC_TS:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_TS:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000101"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_TS:bSAR_SEQ:enable\)

UDB [UDB=(1,2)] is empty.
UDB [UDB=(1,3)] is empty.
UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_5\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_1\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:ch_addr_4\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=3, #inputs=12, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=1][MC=3]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * \ADC_TS:ch_addr_5\
            + !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * \ADC_TS:ch_addr_4\
            + !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * \ADC_TS:ch_addr_3\
            + !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * \ADC_TS:ch_addr_2\
            + \ADC_TS:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }
}

UDB [UDB=(1,5)] is empty.
UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=3, #inputs=5, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=Net_18, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: PosEdge(\ADC_TS:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_TS:bSAR_SEQ:bus_clk_nrq_reg\ * !\ADC_TS:bSAR_SEQ:nrq_reg\
        );
        Output = Net_18 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: PosEdge(\ADC_TS:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_TS:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_TS:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART:BUART:pollcount_1\
            + Net_7 * \UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=2, #inputs=5, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_TS:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_18
            + \ADC_TS:Net_3935\
        );
        Output = \ADC_TS:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_fifonotempty\ * \UART:BUART:rx_state_stop1_reg\
        );
        Output = \UART:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\UART:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_2 => \UART:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \UART:BUART:rx_state_0\ ,
        cs_addr_0 => \UART:BUART:rx_bitclk_enable\ ,
        route_si => \UART:BUART:rx_postpoll\ ,
        f0_load => \UART:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \UART:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \UART:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=2, #inputs=8, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_load_fifo\ * \UART:BUART:rx_fifofull\
        );
        Output = \UART:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=3, #inputs=9, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:txn\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART:BUART:txn\ * \UART:BUART:tx_state_1\ * 
              !\UART:BUART:tx_bitclk\
            + \UART:BUART:txn\ * \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * !\UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\ * 
              !\UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_17 * !\ADC_TS:bSAR_SEQ:load_period\
        );
        Output = \ADC_TS:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_ctrl_mark_last\ (fanout=8)
        Properties               : 
        {
        }
}

controlcell: Name =\ADC_TS:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_TS:clock\ ,
        control_7 => \ADC_TS:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_TS:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_TS:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_TS:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_TS:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_TS:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_TS:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_TS:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=3, #inputs=12, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

statusicell: Name =\UART:BUART:sRX:RxSts\
    PORT MAP (
        clock => \UART:Net_9\ ,
        status_5 => \UART:BUART:rx_status_5\ ,
        status_4 => \UART:BUART:rx_status_4\ ,
        status_3 => \UART:BUART:rx_status_3\ ,
        interrupt => Net_9 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_fifo_notfull\
        );
        Output = \UART:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,3)][LB=1] #macrocells=3, #inputs=7, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * !\UART:BUART:tx_fifo_empty\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_fifo_empty\ * !\UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(2,3)][LB=1][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\UART:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_2 => \UART:BUART:tx_state_1\ ,
        cs_addr_1 => \UART:BUART:tx_state_0\ ,
        cs_addr_0 => \UART:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\UART:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART:Net_9\ ,
        status_3 => \UART:BUART:tx_fifo_notfull\ ,
        status_2 => \UART:BUART:tx_status_2\ ,
        status_1 => \UART:BUART:tx_fifo_empty\ ,
        status_0 => \UART:BUART:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,4)][LB=1] #macrocells=4, #inputs=11, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_0 => \UART:BUART:counter_load_not\ ,
        ce0_reg => \UART:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

synccell: Name =\ADC_TS:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_TS:nrq\ ,
        out => \ADC_TS:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,5)] is empty.
UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,5)] is empty.
Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =RxInt
        PORT MAP (
            interrupt => Net_9 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\ADC_TS:IRQ\
        PORT MAP (
            interrupt => Net_18 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =\UART:RXInternalInterrupt\
        PORT MAP (
            interrupt => Net_9 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_TS:FinalBuf\
        PORT MAP (
            dmareq => \ADC_TS:Net_3698\ ,
            termin => zero ,
            termout => \ADC_TS:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_TS:TempBuf\
        PORT MAP (
            dmareq => \ADC_TS:Net_3830\ ,
            termin => zero ,
            termout => \ADC_TS:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
Port 1 contains the following IO cells:
Port 2 contains the following IO cells:
Port 3 contains the following IO cells:
[IoId=2]: 
Pin : Name = Pin_4(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_4(0)__PA ,
        analog_term => Net_23 ,
        pad => Pin_4(0)_PAD ,
        pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Pin_6(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_6(0)__PA ,
        analog_term => Net_27 ,
        pad => Pin_6(0)_PAD ,
        pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_5\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = Pin_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_1(0)__PA ,
        analog_term => Net_19 ,
        pad => Pin_1(0)_PAD ,
        pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Pin_2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_2(0)__PA ,
        analog_term => Net_20 ,
        pad => Pin_2(0)_PAD ,
        pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

Port 12 contains the following IO cells:
[IoId=6]: 
Pin : Name = Rx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Rx_1(0)__PA ,
        fb => Net_7 ,
        pad => Rx_1(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Tx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Tx_1(0)__PA ,
        pin_input => Net_2 ,
        pad => Tx_1(0)_PAD );
    Properties:
    {
    }

Port 15 contains the following IO cells:
[IoId=2]: 
Pin : Name = Pin_5(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_5(0)__PA ,
        analog_term => Net_25 ,
        pad => Pin_5(0)_PAD ,
        pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_4\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Pin_3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_3(0)__PA ,
        analog_term => Net_22 ,
        pad => Pin_3(0)_PAD ,
        pin_input => \ADC_TS:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

ARM group 0: empty
CAN group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \ADC_TS:clock\ ,
            dclk_0 => \ADC_TS:clock_local\ ,
            dclk_glb_1 => \UART:Net_9\ ,
            dclk_1 => \UART:Net_9_local\ );
        Properties:
        {
        }
Comparator group 0: empty
DFB group 0: empty
DSM group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SC group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: empty
VIDAC group 0: empty
OpAmp group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC_TS:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC_TS:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,1): 
    sarcell: Name =\ADC_TS:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_TS:Net_2803\ ,
            vminus => \ADC_TS:SAR:Net_126\ ,
            ext_pin => \ADC_TS:SAR:Net_209\ ,
            vrefhi_out => \ADC_TS:SAR:Net_126\ ,
            vref => \ADC_TS:SAR:Net_235\ ,
            clk_udb => \ADC_TS:clock_local\ ,
            irq => \ADC_TS:SAR:Net_252\ ,
            next => Net_17 ,
            data_out_udb_11 => \ADC_TS:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_TS:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_TS:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_TS:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_TS:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_TS:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_TS:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_TS:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_TS:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_TS:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_TS:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_TS:SAR:Net_207_0\ ,
            eof_udb => \ADC_TS:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_TS:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_113 ,
            muxin_62 => Net_112 ,
            muxin_61 => Net_111 ,
            muxin_60 => Net_110 ,
            muxin_59 => Net_109 ,
            muxin_58 => Net_108 ,
            muxin_57 => Net_107 ,
            muxin_56 => Net_106 ,
            muxin_55 => Net_105 ,
            muxin_54 => Net_104 ,
            muxin_53 => Net_103 ,
            muxin_52 => Net_102 ,
            muxin_51 => Net_101 ,
            muxin_50 => Net_100 ,
            muxin_49 => Net_99 ,
            muxin_48 => Net_98 ,
            muxin_47 => Net_97 ,
            muxin_46 => Net_95 ,
            muxin_45 => Net_93 ,
            muxin_44 => Net_92 ,
            muxin_43 => Net_90 ,
            muxin_42 => Net_88 ,
            muxin_41 => Net_87 ,
            muxin_40 => Net_85 ,
            muxin_39 => Net_83 ,
            muxin_38 => Net_82 ,
            muxin_37 => Net_80 ,
            muxin_36 => Net_78 ,
            muxin_35 => Net_77 ,
            muxin_34 => Net_75 ,
            muxin_33 => Net_73 ,
            muxin_32 => Net_72 ,
            muxin_31 => Net_70 ,
            muxin_30 => Net_68 ,
            muxin_29 => Net_67 ,
            muxin_28 => Net_65 ,
            muxin_27 => Net_63 ,
            muxin_26 => Net_62 ,
            muxin_25 => Net_60 ,
            muxin_24 => Net_58 ,
            muxin_23 => Net_57 ,
            muxin_22 => Net_55 ,
            muxin_21 => Net_53 ,
            muxin_20 => Net_52 ,
            muxin_19 => Net_50 ,
            muxin_18 => Net_48 ,
            muxin_17 => Net_47 ,
            muxin_16 => Net_45 ,
            muxin_15 => Net_43 ,
            muxin_14 => Net_42 ,
            muxin_13 => Net_40 ,
            muxin_12 => Net_38 ,
            muxin_11 => Net_37 ,
            muxin_10 => Net_35 ,
            muxin_9 => Net_33 ,
            muxin_8 => Net_32 ,
            muxin_7 => Net_30 ,
            muxin_6 => Net_28 ,
            muxin_5 => Net_27 ,
            muxin_4 => Net_25 ,
            muxin_3 => Net_23 ,
            muxin_2 => Net_22 ,
            muxin_1 => Net_20 ,
            muxin_0 => Net_19 ,
            hw_ctrl_en_63 => \ADC_TS:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_TS:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_TS:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_TS:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_TS:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_TS:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_TS:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_TS:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_TS:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_TS:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_TS:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_TS:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_TS:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_TS:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_TS:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_TS:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_TS:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_TS:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_TS:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_TS:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_TS:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_TS:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_TS:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_TS:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_TS:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_TS:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_TS:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_TS:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_TS:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_TS:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_TS:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_TS:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_TS:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_TS:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_TS:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_TS:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_TS:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_TS:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_TS:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_TS:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_TS:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_TS:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_TS:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_TS:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_TS:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_TS:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_TS:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_TS:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_TS:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_TS:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_TS:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_TS:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_TS:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_TS:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_TS:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_TS:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_TS:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_TS:AMuxHw_2_Decoder_one_hot_6\ ,
            vout => \ADC_TS:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |          | 
Port | Pin | Fixed |      Type |       Drive Mode |     Name | Connections
-----+-----+-------+-----------+------------------+----------+--------------------------------------------------------
   3 |   2 |       |      NONE |      HI_Z_ANALOG | Pin_4(0) | In(\ADC_TS:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_23)
     |   3 |       |      NONE |      HI_Z_ANALOG | Pin_6(0) | In(\ADC_TS:AMuxHw_2_Decoder_one_hot_5\), Analog(Net_27)
     |   6 |     * |      NONE |      HI_Z_ANALOG | Pin_1(0) | In(\ADC_TS:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_19)
     |   7 |     * |      NONE |      HI_Z_ANALOG | Pin_2(0) | In(\ADC_TS:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_20)
-----+-----+-------+-----------+------------------+----------+--------------------------------------------------------
  12 |   6 |     * |      NONE |     HI_Z_DIGITAL |  Rx_1(0) | FB(Net_7)
     |   7 |     * |      NONE |         CMOS_OUT |  Tx_1(0) | In(Net_2)
-----+-----+-------+-----------+------------------+----------+--------------------------------------------------------
  15 |   2 |       |      NONE |      HI_Z_ANALOG | Pin_5(0) | In(\ADC_TS:AMuxHw_2_Decoder_one_hot_4\), Analog(Net_25)
     |   3 |       |      NONE |      HI_Z_ANALOG | Pin_3(0) | In(\ADC_TS:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_22)
----------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.225ms
Digital Placement phase: Elapsed time ==> 8s.924ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "UART_test_r.vh2" --pcf-path "UART_test.pco" --des-name "UART_test" --dsf-path "UART_test.dsf" --sdc-path "UART_test.sdc" --lib-path "UART_test_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 10s.172ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 1s.324ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.300ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in UART_test_timing.html.
Static timing analysis phase: Elapsed time ==> 1s.408ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.018ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.756ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 49s.687ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 49s.706ms
API generation phase: Elapsed time ==> 3s.766ms
Dependency generation phase: Elapsed time ==> 0s.151ms
Cleanup phase: Elapsed time ==> 0s.007ms
